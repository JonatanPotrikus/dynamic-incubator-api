// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Machine {
  id        Int             @id @default(autoincrement())
  ip        String
  name      String
  type      String
  companyId Int?
  configs   MachineConfig[]
  sensors   Sensor[]
  Company   Company?        @relation(fields: [companyId], references: [id])

  @@unique([ip])
}

model MachineConfig {
  id        Int     @id @default(autoincrement())
  key       String
  value     String
  machineId Int
  machine   Machine @relation(fields: [machineId], references: [id])
}

model Sensor {
  id         Int        @id @default(autoincrement())
  typeId     Int
  machineId  Int
  value      Float
  timestamp  DateTime   @default(now())
  sensorType SensorType @relation(fields: [typeId], references: [id])
  machine    Machine    @relation(fields: [machineId], references: [id])
}

model SensorType {
  id     Int      @id @default(autoincrement())
  name   String
  unit   String // (example: ÂºC, %, Pa)
  Sensor Sensor[]
}

model User {
  id            Int             @id @default(autoincrement())
  name          String
  email         String
  password      String
  role          String
  createAt      DateTime        @default(now())
  updateAt      DateTime        @default(now())
  companyId     Int?
  UserCompanies UserCompanies[]

  @@unique([email])
}

model Company {
  id            Int             @id @default(autoincrement())
  name          String
  UserCompanies UserCompanies[]
  Machine       Machine[]
}

model UserCompanies {
  id        Int @id @default(autoincrement())
  userId    Int
  companyId Int

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@unique([userId, companyId])
}
